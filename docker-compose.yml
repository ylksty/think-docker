version: '3.3'
services:
### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    ports:
      - "3306:3306"

### Nacos ################################################
  nacos:
    build: ./nacos
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=ry-config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=root
    volumes:
      - ${DATA_PATH_HOST}/nacos/standalone-logs/:/home/nacos/logs
      - ${DATA_PATH_HOST}/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8848:8848"
      - "9555:9555"
    depends_on:
      - mysql
    restart: on-failure

### Redis ################################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "6379:6379"

### ElasticSearch ########################################
  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        - ELK_VERSION=7.10.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms64m -Xmx256m"
    volumes:
      - ${CONFIGS_PATH_HOST}/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - ${DATA_PATH_HOST}/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic

### Kibana ##############################################
  kibana:
    build:
      context: ./kibana
      args:
        - ELK_VERSION=7.10.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic
    environment:
      I18N_LOCALE: zh-CN #汉化

### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - NGINX_VERSION=1.19.6
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-available
      - ${LOG_PATH_HOST}/nginx:/var/log/nginx
    ports:
      - "80:80"

### rabbit #########################################
  rabbit:
    image: rabbitmq:3.8-management
    hostname: rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    volumes:
      - ${DATA_PATH_HOST}/rabbit/data:/var/lib/rabbitmq

### jenkins #########################################
  jenkins:
    build:
      context: ./jenkins
      args:
        - JENKINS_VERSION=2.286
    environment:
      - JAVA_OPTS=-Duser.timezone=Asia/Shanghai
    volumes:
      - ${DATA_PATH_HOST}/jenkins_home:/var/jenkins_home
      - /Applications/IntelliJ IDEA.app/Contents/plugins/maven/lib/maven3:/usr/local/maven
    ports:
      - 8180:8080

### zookeeper #########################################
  zookeeper:
    image: zookeeper:3.5.7
    restart: always
    container_name: zookeeper
    volumes:
      - ${DATA_PATH_HOST}/zookeeper:/data
      - ./zookeeper/conf:/conf
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
    networks:
      mysql:
        ipv4_address: 172.18.0.254

### mycat #########################################
### https://github.com/liuwel/docker-mycat
### mysql -uroot -proot -P8066 -h172.18.0.5
  mycat:
    build: ./mycat
    container_name: mycat
    volumes:
      - ./mycat/conf/:/mycat/conf/:ro
      - ${DATA_PATH_HOST}/mycat-logs/:/mycat/logs/:rw
      - ./mycat/hosts:/etc/hosts:ro
      - ./mycat/web/mycat.properties:/mycat-web/mycat-web/WEB-INF/classes/mycat.properties
    ports:
      - "8066:8066"
      - "9066:9066"
      - "8082:8082"
    links:
      - m1
      - s1
      - s2
    networks:
      mysql:
        ipv4_address: 172.18.0.5
    ulimits:
      nproc: 65535
    hostname: mycat
    mem_limit: 512m
    restart: always
  m1:
    image: mysql:${MYSQL_VERSION}
    container_name: m1
    volumes:
      - ./mycat/mysql-m1/docker.cnf:/etc/mysql/conf.d/docker.cnf:ro
      #- /etc/localtime:/etc/localtime:ro
      - ./mycat/hosts:/etc/hosts:ro
    ports:
      - "3309:3306"
    networks:
      mysql:
        ipv4_address: 172.18.0.2
    ulimits:
      nproc: 65535
    hostname: m1
    mem_limit: 512m
    restart: always
    command:
      - '--default-authentication-plugin=mysql_native_password'
      - '--character-set-server=utf8mb4'
    environment:
      MYSQL_ROOT_PASSWORD: m1test
  s1:
    image: mysql:${MYSQL_VERSION}
    container_name: s1
    volumes:
      - ./mycat/mysql-s1/docker.cnf:/etc/mysql/conf.d/docker.cnf:ro
      # - /etc/localtime:/etc/localtime:ro
      - ./mycat/hosts:/etc/hosts:ro
    ports:
      - "3307:3306"
    networks:
      mysql:
        ipv4_address: 172.18.0.3
    links:
      - m1
    ulimits:
      nproc: 65535
    hostname: s1
    mem_limit: 512m
    restart: always
    command:
      - '--default-authentication-plugin=mysql_native_password'
      - '--character-set-server=utf8mb4'
    environment:
      MYSQL_ROOT_PASSWORD: s1test
  s2:
    image: mysql:${MYSQL_VERSION}
    container_name: s2
    volumes:
      - ./mycat/mysql-s2/docker.cnf:/etc/mysql/conf.d/docker.cnf:ro
      #- /etc/localtime:/etc/localtime:ro
      - ./mycat/hosts:/etc/hosts:ro
    ports:
      - "3308:3306"
    links:
      - m1
    networks:
      mysql:
        ipv4_address: 172.18.0.4
    ulimits:
      nproc: 65535
    hostname: s2
    mem_limit: 512m
    restart: always
    command:
      - '--default-authentication-plugin=mysql_native_password'
      - '--character-set-server=utf8mb4'
    environment:
      MYSQL_ROOT_PASSWORD: s2test


networks:
  elastic:
    driver: bridge
  mysql:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1